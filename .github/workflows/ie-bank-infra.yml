name: ie-bank-infra

on:
  workflow_dispatch:
  push:
      paths-ignore:
        - 'scripts/**'
  pull_request:
    branches: [ "main" ]

env:
  RESOURCE_GROUP_DEV: BCSAI2024-DEVOPS-STUDENTS-A-DEV
  RESOURCE_GROUP_UAT: BCSAI2024-DEVOPS-STUDENTS-A-UAT
  RESOURCE_GROUP_PROD: BCSAI2024-DEVOPS-STUDENTS-A-PROD
  SUBSCRIPTION_ID_DEV: e0b9cada-61bc-4b5a-bd7a-52c606726b3b
  USER_ALIAS: bestbank

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Run Bicep Linter
        run: az bicep build --file ./main.bicep 

  # # unit testing.
  #     - name: Test Key Vault Deployment
  #       id: test-vault
  #       run: |
  #         az keyvault show --name BestBank-KV-dev  --resource-group ${{ env.RESOURCE_GROUP_DEV }}
  #       continue-on-error: false      
  
  # #check if Key Vault Administrator role is assigned.
  #     - name: Verify Role Assignments
  #       id: verify-roles
  #       run: |
  #         roles=$(az role assignment list --scope /subscriptions/${{ env.SUBSCRIPTION_ID_DEV }}/resourceGroups/${{ env.RESOURCE_GROUP_DEV }}/providers/Microsoft.KeyVault/vaults/BestBank-KV-dev --query '[].roleDefinitionName' -o tsv)
  #         if ! echo "$roles" | grep -q "Key Vault Administrator"; then
  #         echo "Key Vault Administrator role is not assigned."
  #           exit 1
  #         fi
  #       shell: bash
    

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'

    steps:
      - uses: actions/checkout@v2
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      # Run ARM template deployment with parameters
      - name: deploy
        uses: azure/arm-deploy@v2
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID_DEV }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_DEV }}
          template: ./main.bicep
          parameters: ./parameters/dev.bicepparam adminUsername=${{ secrets.DEFAULT_ADMIN_USERNAME }} adminPassword=${{ secrets.DEFAULT_ADMIN_PASS }}
          

          deploymentName: ${{ env.USER_ALIAS }}-dev

  deploy-uat:
    if: (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main') || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build, deploy-dev]
    environment:
      name: 'UAT'

    steps:
      - uses: actions/checkout@v2
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Run ARM template deployment with parameters
      - name: deploy
        uses: azure/arm-deploy@v2
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID_DEV }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_UAT }}
          template: ./main.bicep
          parameters: ./parameters/uat.bicepparam adminUsername=${{ secrets.DEFAULT_ADMIN_USERNAME }} adminPassword=${{ secrets.DEFAULT_ADMIN_PASS }}
          #added the secrets for uat 
            
          deploymentName: ${{ env.USER_ALIAS }}-uat